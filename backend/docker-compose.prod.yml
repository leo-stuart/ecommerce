# Production Docker Compose Configuration
# This file shows how to run the backend in production with Docker

version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: zoppy-backend-prod
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      # Application
      NODE_ENV: production
      PORT: 3000
      API_PREFIX: api
      
      # Database - Use Railway Postgres DATABASE_URL
      DATABASE_URL: ${DATABASE_URL}
      DB_SYNC: "false"  # IMPORTANT: Never auto-sync in production
      LOG_LEVEL: "info"
      
      # CORS
      CORS_ORIGIN: ${CORS_ORIGIN:-https://your-frontend-domain.com}
    networks:
      - zoppy-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Note: Using external Railway Postgres database
  # No local database container needed

  # Optional: Nginx reverse proxy
  # nginx:
  #   image: nginx:alpine
  #   container_name: zoppy-nginx
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - backend
  #   networks:
  #     - zoppy-network

networks:
  zoppy-network:
    driver: bridge

# No volumes needed - using external Railway Postgres

